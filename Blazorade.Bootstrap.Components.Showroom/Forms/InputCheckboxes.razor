@code {

	Spacing headingMarginTop = Spacing.S5;
}

<Heading Level="HeadingLevel.H2">FormInputCheckbox</Heading>
<Paragraph>
	Easily create different kinds of text boxes for a variety of purposes with the <code>FormInputCheckbox</code> component.
</Paragraph>

<DocsSection ComponentName="FormInputCheckbox" />

<Heading Id="standard-buttons" IsAnchor="true" Level="HeadingLevel.H4" MarginTop="@headingMarginTop">FormInputCheckbox</Heading>
<Paragraph>
	Bootstrap buttons come in different styles for different semantic purposes.
	See <Anchor Url="https://github.com/MikaBerglund/Blazor-Bootstrap/wiki/Button#basic-usage" OpenInNewTab="true">the wiki</Anchor> for sample code.
</Paragraph>

<Row class="pl-4 pr-4">
	<Column class="col-12 col-md-6">

		<Heading Level="HeadingLevel.H4">Form Model="editExample" with ModelState = Edit</Heading>

		<Form Model="editExample" OnValidSubmit="Submit_Click">
			<Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator />

			<FormGroup Label="Example 1">
				<FormInputCheckbox Label="Label 1" Help="Help 1" @bind-Value="editExample.Example1" />
			</FormGroup>
			<FormGroup Label="Example 2">
				<FormInputCheckbox Label="Label 2" Help="Help 2" @bind-Value="editExample.Example2" Mode="TextBoxMode.MultiLine" Rows="3" />
			</FormGroup>

			<Row>
				<FormGroup Label="Example 3" class="col-3">
					<FormInputCheckbox Label="Label 3" Help="Help 3" @bind-Value="editExample.Example3" />
				</FormGroup>

				<FormGroup Label="Example 4" class="col-3">
					<FormInputCheckbox Label="Label 4" Help="Help 4" @bind-Value="editExample.Example4" />
				</FormGroup>
				<FormGroup Label="Example 5" class="col-3">
					<FormInputCheckbox Label="Label 5" Help="Help 5" @bind-Value="editExample.Example5" />
				</FormGroup>
				<FormGroup Label="Example 6" class="col-3">
					<FormInputCheckbox Label="Label 6" Help="Help 6" @bind-Value="editExample.Example6" />
				</FormGroup>
			</Row>

			<Row>
				<Microsoft.AspNetCore.Components.Forms.ValidationSummary />
			</Row>

			<Row class="justify-content-center mb-3">
				Submit to copy the values from left to right.
			</Row>

			<Row class="justify-content-center">
				<ButtonGroup class="pr-4">
					<Button IsOutline="true" Color="NamedColor.Secondary" OnClicked="@(e => editExample.ModelState = editExample.ModelState == ModelState.Edit ? ModelState.View : ModelState.Edit)">Toggle</Button>
				</ButtonGroup>
				<ButtonGroup>
					<Button Color="NamedColor.Secondary" OnClicked="Clear_Click">Clear</Button>
					<Button IsSubmit="true" Color="NamedColor.Primary">Submit</Button>
				</ButtonGroup>
			</Row>
		</Form>
	</Column>
	<Column class="col-12 col-md-6">

		<Heading Level="HeadingLevel.H4">Form Model="viewExample" with ModelState = View</Heading>

		<Form Model="viewExample">
			<FormGroup Label="Example 1">
				<FormInputCheckbox Label="Label 1" Help="Help 1" @bind-Value="viewExample.Example1" />
			</FormGroup>
			<FormGroup Label="Example 2">
				<FormInputCheckbox Label="Label 2" Help="Help 2" @bind-Value="viewExample.Example2" Mode="TextBoxMode.MultiLine" Rows="3" />
			</FormGroup>
			<FormGroup Label="Examples 3, 4, 5, 6. Display=Inline" Help="Help 3, 4, 5, 6. Placed in FormGroup">
				<FormInputCheckbox Display="Display.Inline" Label="Label 3" LabelWidth="100" @bind-Value="viewExample.Example3" />
				<FormInputCheckbox Display="Display.Inline" Label="Label 4" LabelWidth="100" @bind-Value="viewExample.Example4" />
				<FormInputCheckbox Display="Display.Inline" Label="Label 5" LabelWidth="100" @bind-Value="viewExample.Example5" />
				<FormInputCheckbox Display="Display.Inline" Label="Label 6" LabelWidth="100" @bind-Value="viewExample.Example6" />
			</FormGroup>
		</Form>
	</Column>
</Row>

@code {

	private Forms.Models.CheckboxExample editExample = new Forms.Models.CheckboxExample { ModelState = ModelState.Edit };
	private Forms.Models.CheckboxExample viewExample = new Forms.Models.CheckboxExample { ModelState = ModelState.View };

	private void Submit_Click()
	{
		viewExample.Example1 = editExample.Example1;
		viewExample.Example2 = editExample.Example2;
		viewExample.Example3 = editExample.Example3;
		viewExample.Example4 = editExample.Example4;
		viewExample.Example5 = editExample.Example5;
		viewExample.Example6 = editExample.Example6;
	}

	private void Clear_Click()
	{
		editExample.Example1 = false;
		editExample.Example2 = false;
		editExample.Example3 = false;
		editExample.Example4 = false;
		editExample.Example5 = false;
		editExample.Example6 = false;
	}
}