@code {

	Spacing headingMarginTop = Spacing.S5;
}

<Heading Level="HeadingLevel.H2">Form components</Heading>
<Paragraph>
	Easily create different kinds of forms for a variety of purposes with the Form components.
</Paragraph>

<DocsSection ComponentName="Form" />

<Heading Id="standard-buttons" IsAnchor="true" Level="HeadingLevel.H4" MarginTop="@headingMarginTop">Form components</Heading>
<Paragraph>
	Bootstrap forms can be used to create data entry pages. You can also use these forms in read-only mode (ModelState=View) to quickly display structured data, or toggle a form between read and edit modes.
	See <Anchor Url="https://github.com/MikaBerglund/Blazor-Bootstrap/wiki/Forms#basic-usage" OpenInNewTab="true">the wiki</Anchor> for sample code.
</Paragraph>

<Heading Level="HeadingLevel.H5">
	Example
</Heading>
<Row class="pl-4 pr-4">
	<Column class="col-12 col-md-6">

		<Heading Level="HeadingLevel.H4">Form Model="editExample" with ModelState = Edit</Heading>

		<Form Model="editExample" OnValidSubmit="Submit_Click">
			<Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator />

			<FormGroup Label="Name">
				<FormInputTextBox Placeholder="Name" Help="Implements FormInputTextBox" @bind-Value="editExample.Name" />
			</FormGroup>
			<Row>
				<FormGroup class="col-8" Label="Title">
					<FormInputSelect Placeholder="Title" Help="Implements FormInputSelect" @bind-Value="editExample.Title">
						<Option />
						<Option Name="Mr" Value="Mister" />
						<Option Name="Ms" Value="Miss" />
						<Option Name="Mrs" Value="Mistress" />
						<Option Name="Dr" Value="Doctor" />
					</FormInputSelect>
				</FormGroup>
				<FormGroup class="col-4" Label="FormGroup Label Checkbox 1" Help="FormGroup Help Checkbox 1">
					<FormInputCheckbox Label="Checkbox 1" @bind-Value="editExample.Checkbox1" />
				</FormGroup>
			</Row>

			<Row>
				<FormGroup class="col-4" Label="Date 1">
					<FormInputDate TValue="DateTime"
								   Help="Implements FormInputDate with Min=-7 days Max=7 days"
								   @bind-Value="editExample.Date1"
								   Min="editExample.Date1.AddDays(-7)"
								   Max="editExample.Date1.AddDays(7)"
								   Step="1" />
				</FormGroup>
				<FormGroup class="col-4" Label="Time 1">
					<FormInputTime TValue="TimeSpan"
								   Help="Implements FormInputTime with Min=9hrs Max=18hrs"
								   @bind-Value="editExample.Time1"
								   Min="TimeSpan.FromHours(9)"
								   Max="TimeSpan.FromHours(18)" />
				</FormGroup>

				<FormGroup class="col-4"
						   Label="DateTime1"
						   Help="Read-only representation of Date1 and Time1">

					@($"{editExample.DateTime1:o}")
				</FormGroup>
			</Row>

			<Row>
				<Microsoft.AspNetCore.Components.Forms.ValidationSummary />
			</Row>

			<Row class="justify-content-center mb-3">
				Submit to copy the values from left to right.
			</Row>

			<Row class="justify-content-center">
				<ButtonGroup class="pr-4">
					<Button IsOutline="true" Color="NamedColor.Secondary" OnClicked="@(e => editExample.ModelState = editExample.ModelState == ModelState.Edit ? ModelState.View : ModelState.Edit)">Toggle</Button>
				</ButtonGroup>
				<ButtonGroup>
					<Button Color="NamedColor.Secondary">Cancel</Button>
					<Button IsSubmit="true" Color="NamedColor.Primary">Submit</Button>
				</ButtonGroup>
			</Row>
		</Form>
	</Column>
	<Column class="col-12 col-md-6">

		<Heading Level="HeadingLevel.H4">Form Model="viewExample" with ModelState = View</Heading>

		<Form Model="viewExample">
			<FormGroup Label="Name">
				<FormInputTextBox Placeholder="No name" Help="This uses a textbox" @bind-Value="viewExample.Name" />
			</FormGroup>
			<Row>
				<FormGroup class="col-8" Label="Title">
					<FormInputTextBox Placeholder="No title" Help="This uses a textbox too. The edit control (left) is a select." @bind-Value="viewExample.Title" />
				</FormGroup>
				<FormGroup class="col-4" Help="This label is optional">
					<FormInputCheckbox Label="Checkbox 1" @bind-Value="viewExample.Checkbox1" />
				</FormGroup>
			</Row>
			<Row>
				<FormGroup class="col-4" Label="Date 1">
					<FormInputDate Help="Implements FormInputDate" @bind-Value="viewExample.Date1" />
				</FormGroup>
				<FormGroup class="col-4" Label="Time 1">
					<FormInputTime Help="Implements FormInputTime" @bind-Value="viewExample.Time1" />
				</FormGroup>
				<FormGroup class="col-4" Label="DateTime1" Help="Read-only representation of Date1 and Time1">
					@($"{viewExample.DateTime1:o}")
				</FormGroup>
			</Row>
		</Form>
	</Column>
</Row>

@code {

	private Forms.Models.CompleteExample editExample = new Forms.Models.CompleteExample { ModelState = ModelState.Edit };
	private Forms.Models.CompleteExample viewExample = new Forms.Models.CompleteExample { ModelState = ModelState.View };

	private void Submit_Click()
	{
		viewExample.Name = editExample.Name;
		viewExample.Title = editExample.Title;
		viewExample.DateTime1 = editExample.DateTime1;
		viewExample.Checkbox1 = editExample.Checkbox1;
	}
}